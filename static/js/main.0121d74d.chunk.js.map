{"version":3,"sources":["components/Nav/Navigation.tsx","App.tsx","Pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","utils/variables.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleList/PeopleList.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","Pages/HomePage.tsx","Root.tsx","index.tsx"],"names":["Navigation","activeLinkClass","isActive","classNames","className","role","to","App","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","tableHeaders","PersonLink","person","slug","sex","name","PersonItem","born","died","motherName","fatherName","mother","father","slugFromParams","useParams","PeopleList","people","map","PeopleTable","tableHeader","PeoplePage","useState","newPeople","setNewPeople","isLoading","setIsLoading","isError","setIsError","useEffect","find","catch","finally","isDisplayErrorMessage","isNoPeopleOnServer","length","isPeopleOnServer","HomePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0121d74d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const activeLinkClass = ({ isActive }: { isActive: boolean }) => (\n    classNames('navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={activeLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={activeLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Nav';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const FEMALE_SEX = 'f';\nexport const NO_PARENT = '-';\n\nexport const tableHeaders = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { FEMALE_SEX } from '../../utils/variables';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink = ({ person }: Props) => (\n  <Link\n    to={`../${person?.slug}`}\n    className={classNames({\n      'has-text-danger': person?.sex === FEMALE_SEX,\n    })}\n  >\n    {person?.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NO_PARENT } from '../../utils/variables';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonItem = ({\n  person,\n}: Props) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug: slugFromParams } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': slugFromParams === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName ?? NO_PARENT}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName ?? NO_PARENT}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleList = ({ people }: Props) => {\n  return (\n    <tbody>\n      {people.map(person => {\n        return (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        );\n      })}\n    </tbody>\n  );\n};\n","import { Person } from '../../types';\nimport { PeopleList } from '../PeopleList';\nimport { tableHeaders } from '../../utils/variables';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable = ({ people }: Props) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map(tableHeader => (\n            <th key={tableHeader}>{tableHeader}</th>\n          ))}\n        </tr>\n      </thead>\n      <PeopleList people={people} />\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [newPeople, setNewPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(people => {\n        return people.map(person => {\n          const mother = people\n            .find(({ name }) => name === person.motherName);\n\n          const father = people\n            .find(({ name }) => name === person.fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n      })\n      .then(setNewPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isDisplayErrorMessage = isError && !isLoading;\n\n  const isNoPeopleOnServer = !newPeople.length && !isLoading && !isError;\n\n  const isPeopleOnServer = !!newPeople.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isDisplayErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleTable people={newPeople} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { HomePage } from './Pages/HomePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}